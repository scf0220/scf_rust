package main

import (
	"context"
	"crypto/ecdsa"
	"encoding/hex"
	"fmt"
	"github.com/ethereum/go-ethereum/core/types"
	"log"
	"math/big"

	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/crypto"
	"github.com/ethereum/go-ethereum/ethclient"
)

func main() {
	// 连接到以太坊客户端
	client, err := ethclient.Dial("https://rpc.ankr.com/eth_sepolia/578c95407e7831f0ac1ef79cacae294dc9bf8307121ca9fffaf1e556a5cca662")
	if err != nil {
		log.Fatal(err)
	}

	// 私钥 (一定要保密)
	privateKey, err := crypto.HexToECDSA("51a3a2416d01818757c86c897b88bd5bb0c8c819407dc9cab6b6df553ccd4c2c")
	if err != nil {
		log.Fatal(err)
	}

	// 获取公钥
	publicKey := privateKey.Public()
	publicKeyECDSA, ok := publicKey.(*ecdsa.PublicKey)
	if !ok {
		log.Fatal("cannot assert type: publicKey is not of type *ecdsa.PublicKey")
	}

	// 从公钥生成地址
	fromAddress := crypto.PubkeyToAddress(*publicKeyECDSA)
	fmt.Println("From Address:", fromAddress.Hex())

	// 获取nonce值
	nonce, err := client.PendingNonceAt(context.Background(), fromAddress)
	if err != nil {
		log.Fatal(err)
	}

	// 设置交易参数
	value := big.NewInt(0)     // 发送1 ether
	gasLimit := uint64(956684) // 标准交易的gas限制
	gasPrice, err := client.SuggestGasPrice(context.Background())
	if err != nil {
		log.Fatal(err)
	}

	// 接收地址
	toAddress := common.HexToAddress("0x1be3c587b108c4448eb21949ac56b87a2ea178fc")
	data, err := hex.DecodeString("")
	// 创建交易
	tx := types.NewTransaction(nonce, toAddress, value, gasLimit, gasPrice, data)

	// 签署交易
	chainID, err := client.NetworkID(context.Background())
	if err != nil {
		log.Fatal(err)
	}

	signedTx, err := types.SignTx(tx, types.NewEIP155Signer(chainID), privateKey)
	if err != nil {
		log.Fatal(err)
	}

	// 发送交易
	err = client.SendTransaction(context.Background(), signedTx)
	if err != nil {
		log.Fatal(err)
	}

	fmt.Println("Transaction sent: ", signedTx.Hash().Hex())
}
